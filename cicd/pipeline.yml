AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation Pipeline with GitHub Source
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: Environment
        Parameters:
          - ProjectName
          - Env
          - GitHubOwner
          - GitHubRepo
          - connectionArn
          - StackName
Parameters:
  ProjectName:
    Type: String
    Description: ProjectName
  Env:
    Type: String
    Description: Prod or Test or Dev
    Default: Prod
    AllowedValues:
      - Prod
      - Test
      - Dev
  GitHubOwner:
    Type: String
    Description: GitHub Repository OwnerName
  GitHubRepo:
    Type: String
    Description: GitHub Repository Name
  GitHubBranch:
    Type: String
    Default: main
  connectionArn:
    Type: String
    NoEcho: true
    Description: CodeConnectionArn
  StackName:
    Type: String
    Description: Name of the CloudFormation stack to be deployed
  StackConfigFile:
    Type: String
    Description: Name of the file in which the stack parameters are defined
    Default: param.dev.json

Mappings:
  EnvMap:
    Prod:
      Name: prod
    Test:
      Name: test
    Dev:
      Name: dev

Resources:
##############################
# S3 Bucket
##############################
  ArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Fn::Sub:
          - "${ProjectName}-${EnvLower}-artifacts-${AWS::AccountId}"
          - EnvLower:
              Fn::FindInMap:
                - EnvMap
                - Ref: Env
                - Name

  TemplateBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Fn::Sub:
          - "${ProjectName}-${EnvLower}-template-${AWS::AccountId}"
          - EnvLower:
              Fn::FindInMap:
                - EnvMap
                - Ref: Env
                - Name

##############################
# IAM Role
##############################
  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: Pipeline-execution-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: 
                - codepipeline.amazonaws.com
                - cloudformation.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: PipelineCfnExecutionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "cloudformation:*"
                  - "s3:GetObject*"
                  - "s3:GetBucket*"
                  - "s3:List*"
                  - "s3:DeleteObject*"
                  - "s3:PutObject"
                  - "s3:PutObjectLegalHold"
                  - "s3:PutObjectRetention"
                  - "s3:PutObjectTagging"
                  - "s3:PutObjectVersionTagging"
                  - "s3:PutObjectVersionAcl"
                  - "s3:PutObjectAcl"
                  - "s3:Abort*"
                  - "iam:PassRole"
                  - "codestar-connections:UseConnection"
                  - "codebuild:BatchGetBuilds"
                  - "codebuild:StartBuild"
                  - "codebuild:StopBuild"
                Resource: "*"

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: Codebuild-service-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: PipelineCfnExecutionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "cloudformation:ValidateTemplate"
                  - "codebuild:CreateReportGroup"
                  - "codebuild:CreateReport"
                  - "codebuild:UpdateReport"
                  - "codebuild:BatchPutTestCases"
                  - "codebuild:BatchPutCodeCoverages"
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                  - "s3:GetObject*"
                  - "s3:GetBucket*"
                  - "s3:List*"
                  - "s3:DeleteObject*"
                  - "s3:PutObject"
                  - "s3:PutObjectLegalHold"
                  - "s3:PutObjectRetention"
                  - "s3:PutObjectTagging"
                  - "s3:PutObjectVersionTagging"
                  - "s3:Abort*"
                Resource: "*"

##############################
# CodeBuild
##############################

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${ProjectName}${Env}CloudformationBuildProject"
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        EnvironmentVariables:
             - Name: Env
               Type: PLAINTEXT
               Value: !Ref Env
             - Name: TEMPLATE_BUCKET
               Type: PLAINTEXT
               Value: !Ref TemplateBucket
             - Name: PARAMETER_FILE
               Type: PLAINTEXT
               Value: !Ref StackConfigFile
      Source:
        Type: CODEPIPELINE
        BuildSpec: cicd/buildspec.yml
      Visibility: PRIVATE

##############################
# CodePipeline
##############################

  CloudFormationPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub "${ProjectName}${Env}CloudformationPipeline"
      RoleArn: !GetAtt PipelineRole.Arn
      PipelineType: V2
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactsBucket
      Stages:
        - Name: Source
          Actions:
            - Name: GitHub_source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: "1"
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                ConnectionArn: !Ref connectionArn
                FullRepositoryId: !Sub "${GitHubOwner}/${GitHubRepo}"
                BranchName: !Ref GitHubBranch
              RunOrder: 1

        - Name: Build
          Actions:
            - Name: CFnBuildAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: BuildOutput
              Configuration:
                ProjectName: !Ref CodeBuildProject
              RunOrder: 1

        - Name: Deploy
          Actions:
            - Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              InputArtifacts:
                - Name: BuildOutput
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                ChangeSetName: !Sub "${ProjectName}-${Env}-ChangeSet"
                StackName: !Ref StackName
                TemplatePath: BuildOutput::packaged-template.yml
                Capabilities: CAPABILITY_NAMED_IAM
                TemplateConfiguration: !Sub "BuildOutput::cicd/${StackConfigFile}"
                RoleArn: !GetAtt PipelineRole.Arn
              RunOrder: 1

Outputs:
  BuildProjectName:
    Description: BuildProject Name
    Value: !Ref CodeBuildProject
    Export:
      Name: !Sub "${ProjectName}-${Env}-BuildProject-Name"
